Testing the 0-add_integer Module
================================

Usage
=====

Importing add_integer function:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for module docstring:
	>>> dstr = __import__("0-add_integer").__doc__
	>>> len(dstr) > 1
	True

Checking for function docstring:
	>>> fstr = __import__("0-add_integer").add_integer.__doc__
	>>> len(fstr) > 1
	True

Checking regular addition:
	>>> add_integer(1, 2)
	3

Checking negative addition:
	>>> add_integer(-2, -3)
	-5

Checking negative with positive addition:
	>>> add_integer(-2, 3)
	1

Checking positive with negative addition:
	>>> add_integer(3, -6)
	-3

Checking float addition:
	>>> add_integer(2.5, 3.5)
	5

Checking negative float addition:
	>>> add_integer(-2.5, -3.5)
	-5

Checking positive float with negative float addition
	>>> add_integer(2.5, -3.5)
	-1

Checking negative float with positive float addition
	>>> add_integer(-2.5, 3.5)
	1

Checking rational number with float addition
	>>> add_integer(3, 2.5)
	5

Checking addition over multiple values:
	>>> [add_integer(i, i ** 2) for i in range (6)]
	[0, 2, 6, 12, 20, 30]

Checking long long int addition:
	>>> add_integer(999999999999999999999999999999, 1)
	1000000000000000000000000000000

Checking string with integer addition
	>>> add_integer(2, "s")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking for NaN
	>>> add_integer(1, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer

Checking for inf:
	>>> add_integer(1, float('inf'))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

Checking for bool with number addition:
	>>> add_integer(True, 1)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking for number with bool addition:
	>>> add_integer(0, False)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking non-number with number addition:
	>>> add_integer([1], 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking number with non-number addition:
	>>> add_integer(3, "2")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

Checking non-number with non-number addition:
	>>> add_integer((2,), {"key":"value"})
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Checking no argument:
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Checking more than two arguments provided:
	>>> add_integer(1, 2, 3)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
