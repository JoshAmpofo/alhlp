Testing the 3-say_my_name Module
================================

Usage
=====

Checking module importing:
	>>> say_my_name = __import__("3-say_my_name").say_my_name

Checking module docstring:
	>>> dstr = __import__("3-say_my_name").__doc__
	>>> len(dstr) > 1
	True

Checking function docstring:
	>>> fstr = __import__("3-say_my_name").say_my_name.__doc__
	>>> len(fstr) > 1
	True

Checking passing right arguments:
	>>> say_my_name("Whatsit", "Tooya")
	My name is Whatsit Tooya
	>>> say_my_name("Lala land is a fun", "place to be")
	My name is Lala land is a fun place to be

Checking passing only one argument:
	>>> say_my_name("Checker")
	My name is Checker 

Checking passing None as first name arg:
	>>> say_my_name(None, "Last")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

Checking passing None as last name arg:
	>>> say_my_name("First", None)
	Traceback (most recent call last):
	...
	TypeError: last_name must be a string

Checking passing wrong type as first name:
	>>> say_my_name(1, "Last")
	Traceback (most recent call last):
	...
	TypeError: first_name must be a string

Checking passing wrong type as last name:
	>>> say_my_name("First", (2))
	Traceback (most recent call last):
	...
	TypeError: last_name must be a string

Checking passing no arguments:
	>>> say_my_name()
	Traceback (most recent call last):
	...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Checking passing more than 2 arguments:
	>>> say_my_name("Fergis", "Fenris", "Wolf")
	Traceback (most recent call last):
	...
	TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
